AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS service account with required policy and permissions to deploy F5XC AWS VPC site'
Parameters:
  Password:
    NoEcho: 'true'
    Type: String
    Description: 'Service account password'
    MinLength: '8'
    MaxLength: '41'
    ConstraintDescription: 'The password must be between 8 and 41 characters'
  PolicyName:
    Type: String
    Description: 'Managed Policy Name'
Resources:
  SAUser:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'

  SAUserPolicies1:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join [ '', [ !Ref 'PolicyName', "1" ] ]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: 'AutoScalingPermissions'
          Effect: Allow
          Action:
          - 'autoscaling:AttachLoadBalancerTargetGroups'
          - 'autoscaling:AttachLoadBalancers'
          - 'autoscaling:CreateAutoScalingGroup'
          - 'autoscaling:CreateLaunchConfiguration'
          - 'autoscaling:DeleteAutoScalingGroup'
          - 'autoscaling:DeleteLaunchConfiguration'
          - 'autoscaling:DescribeAutoScalingGroups'
          - 'autoscaling:DescribeLaunchConfigurations'
          - 'autoscaling:DescribeLoadBalancerTargetGroups'
          - 'autoscaling:DescribeLoadBalancers'
          - 'autoscaling:DetachLoadBalancerTargetGroups'
          - 'autoscaling:DetachLoadBalancers'
          - 'autoscaling:DisableMetricsCollection'
          - 'autoscaling:EnableMetricsCollection'
          - 'autoscaling:ResumeProcesses'
          - 'autoscaling:SuspendProcesses'
          - 'autoscaling:UpdateAutoScalingGroup'
          Resource: '*'
        - Sid: 'EC2Permissions'
          Effect: Allow
          Action:
          - 'ec2:AllocateAddress'
          - 'ec2:AssignPrivateIpAddresses'
          - 'ec2:AssociateAddress'
          - 'ec2:AssociateIamInstanceProfile'
          - 'ec2:AssociateRouteTable'
          - 'ec2:AssociateSubnetCidrBlock'
          - 'ec2:AssociateVpcCidrBlock'
          - 'ec2:AttachInternetGateway'
          - 'ec2:AttachNetworkInterface'
          - 'ec2:AttachVpnGateway'
          - 'ec2:AuthorizeSecurityGroupEgress'
          - 'ec2:AuthorizeSecurityGroupIngress'
          - 'ec2:CreateCustomerGateway'
          - 'ec2:CreateInternetGateway'
          - 'ec2:CreateNetworkInterface'
          - 'ec2:CreateRoute'
          - 'ec2:CreateRouteTable'
          - 'ec2:CreateSecurityGroup'
          - 'ec2:CreateSubnet'
          - 'ec2:CreateTags'
          - 'ec2:CreateVpc'
          - 'ec2:CreateVpnConnection'
          - 'ec2:CreateVpnConnectionRoute'
          - 'ec2:CreateVpnGateway'
          - 'ec2:DeleteClientVpnEndpoint'
          - 'ec2:DeleteClientVpnRoute'
          - 'ec2:DeleteCustomerGateway'
          - 'ec2:DeleteInternetGateway'
          - 'ec2:DeleteNetworkInterface'
          - 'ec2:DeleteRoute'
          - 'ec2:DeleteRouteTable'
          - 'ec2:DeleteSecurityGroup'
          - 'ec2:DeleteSubnet'
          - 'ec2:DeleteTags'
          - 'ec2:DeleteVpc'
          - 'ec2:DeleteVpnConnection'
          - 'ec2:DeleteVpnGateway'
          - 'ec2:DescribeAccountAttributes'
          - 'ec2:DescribeAddresses'
          - 'ec2:DescribeClientVpnConnections'
          - 'ec2:DescribeClientVpnEndpoints'
          - 'ec2:DescribeCustomerGateways'
          - 'ec2:DescribeIamInstanceProfileAssociations'
          - 'ec2:DescribeImages'
          - 'ec2:DescribeInstanceAttribute'
          - 'ec2:DescribeInstanceCreditSpecifications'
          - 'ec2:DescribeInstanceTypes'
          - 'ec2:DescribeInstances'
          - 'ec2:DescribeInternetGateways'
          - 'ec2:DescribeNetworkAcls'
          - 'ec2:DescribeNetworkInterfaces'
          - 'ec2:DescribeRouteTables'
          - 'ec2:DescribeSecurityGroups'
          - 'ec2:DescribeSubnets'
          - 'ec2:DescribeTags'
          - 'ec2:DescribeVolumes'
          - 'ec2:DescribeVolumesModifications'
          - 'ec2:DescribeVpcAttribute'
          - 'ec2:DescribeVpcClassicLink'
          - 'ec2:DescribeVpcClassicLinkDnsSupport'
          - 'ec2:DescribeVpcs'
          - 'ec2:DescribeVpnConnections'
          - 'ec2:DescribeVpnGateways'
          - 'ec2:DetachInternetGateway'
          - 'ec2:DetachNetworkInterface'
          - 'ec2:DetachVpnGateway'
          - 'ec2:DisableVgwRoutePropagation'
          - 'ec2:DisassociateAddress'
          - 'ec2:DisassociateIamInstanceProfile'
          - 'ec2:DisassociateRouteTable'
          - 'ec2:DisassociateSubnetCidrBlock'
          - 'ec2:DisassociateVpcCidrBlock'
          - 'ec2:EnableVgwRoutePropagation'
          - 'ec2:GetPasswordData'
          - 'ec2:ModifyInstanceAttribute'
          - 'ec2:ModifyInstanceCreditSpecification'
          - 'ec2:ModifyInstanceMetadataOptions'
          - 'ec2:ModifyNetworkInterfaceAttribute'
          - 'ec2:ModifySubnetAttribute'
          - 'ec2:ModifyVolume'
          - 'ec2:ModifyVpcAttribute'
          - 'ec2:ModifyVpnConnection'
          - 'ec2:ModifyVpnConnectionOptions'
          - 'ec2:MonitorInstances'
          - 'ec2:ReleaseAddress'
          - 'ec2:ReplaceIamInstanceProfileAssociation'
          - 'ec2:ReplaceRoute'
          - 'ec2:ReplaceRouteTableAssociation'
          - 'ec2:RevokeSecurityGroupEgress'
          - 'ec2:RevokeSecurityGroupIngress'
          - 'ec2:RunInstances'
          - 'ec2:StartInstances'
          - 'ec2:StopInstances'
          - 'ec2:TerminateInstances'
          - 'ec2:UnassignPrivateIpAddresses'
          - 'ec2:UnmonitorInstances'
          Resource: '*'
        - Sid: 'ELBPermissions'
          Effect: Allow
          Action:
          - 'elasticloadbalancing:AddTags'
          - 'elasticloadbalancing:CreateListener'
          - 'elasticloadbalancing:CreateLoadBalancer'
          - 'elasticloadbalancing:CreateTargetGroup'
          - 'elasticloadbalancing:DeleteListener'
          - 'elasticloadbalancing:DeleteLoadBalancer'
          - 'elasticloadbalancing:DeleteTargetGroup'
          - 'elasticloadbalancing:DeregisterTargets'
          - 'elasticloadbalancing:DescribeInstanceHealth'
          - 'elasticloadbalancing:DescribeListeners'
          - 'elasticloadbalancing:DescribeLoadBalancerAttributes'
          - 'elasticloadbalancing:DescribeLoadBalancers'
          - 'elasticloadbalancing:DescribeTags'
          - 'elasticloadbalancing:DescribeTargetGroupAttributes'
          - 'elasticloadbalancing:DescribeTargetGroups'
          - 'elasticloadbalancing:DescribeTargetHealth'
          - 'elasticloadbalancing:ModifyListener'
          - 'elasticloadbalancing:ModifyLoadBalancerAttributes'
          - 'elasticloadbalancing:ModifyTargetGroup'
          - 'elasticloadbalancing:ModifyTargetGroupAttributes'
          - 'elasticloadbalancing:RegisterTargets'
          - 'elasticloadbalancing:RemoveTags'
          Resource: '*'
        - Sid: 'IAMPermissions'
          Effect: Allow
          Action:
          - 'iam:AddRoleToInstanceProfile'
          - 'iam:AttachRolePolicy'
          - 'iam:CreateInstanceProfile'
          - 'iam:CreatePolicy'
          - 'iam:CreatePolicyVersion'
          - 'iam:CreateRole'
          - 'iam:CreateServiceLinkedRole'
          - 'iam:DeleteInstanceProfile'
          - 'iam:DeletePolicy'
          - 'iam:DeletePolicyVersion'
          - 'iam:DeleteRole'
          - 'iam:DeleteRolePermissionsBoundary'
          - 'iam:DeleteRolePolicy'
          - 'iam:DetachRolePolicy'
          - 'iam:GetInstanceProfile'
          - 'iam:GetPolicy'
          - 'iam:GetPolicyVersion'
          - 'iam:GetRole'
          - 'iam:ListAttachedRolePolicies'
          - 'iam:ListInstanceProfilesForRole'
          - 'iam:ListPolicyVersions'
          - 'iam:ListRolePolicies'
          - 'iam:PassRole'
          - 'iam:PutRolePermissionsBoundary'
          - 'iam:RemoveRoleFromInstanceProfile'
          - 'iam:TagRole'
          - 'iam:UpdateAssumeRolePolicy'
          - 'iam:UpdateRole'
          - 'iam:UpdateRoleDescription'
          Resource: '*'
      Users: [!Ref 'SAUser']

  SAUserPolicies2:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Join [ '', [ !Ref 'PolicyName', "2" ] ]
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: 'DirectConnectPermissions'
          Effect: Allow
          Action:
          - 'directconnect:AllocateHostedConnection'
          - 'directconnect:AllocatePrivateVirtualInterface'
          - 'directconnect:AllocatePublicVirtualInterface'
          - 'directconnect:AssociateHostedConnection'
          - 'directconnect:AssociateVirtualInterface'
          - 'directconnect:ConfirmConnection'
          - 'directconnect:ConfirmPrivateVirtualInterface'
          - 'directconnect:ConfirmPublicVirtualInterface'
          - 'directconnect:CreateConnection'
          - 'directconnect:CreateDirectConnectGateway'
          - 'directconnect:CreateDirectConnectGatewayAssociation'
          - 'directconnect:CreatePrivateVirtualInterface'
          - 'directconnect:CreatePublicVirtualInterface'
          - 'directconnect:DeleteConnection'
          - 'directconnect:DeleteDirectConnectGateway'
          - 'directconnect:DeleteDirectConnectGatewayAssociation'
          - 'directconnect:DeleteVirtualInterface'
          - 'directconnect:DescribeConnections'
          - 'directconnect:DescribeDirectConnectGatewayAssociations'
          - 'directconnect:DescribeDirectConnectGatewayAttachments'
          - 'directconnect:DescribeDirectConnectGateways'
          - 'directconnect:DescribeHostedConnections'
          - 'directconnect:DescribeTags'
          - 'directconnect:DescribeVirtualGateways'
          - 'directconnect:DescribeVirtualInterfaces'
          - 'directconnect:TagResource'
          - 'directconnect:UntagResource'
          - 'directconnect:UpdateConnection'
          - 'directconnect:UpdateDirectConnectGatewayAssociation'
          Resource: '*'
      Users: [!Ref 'SAUser']

  SAKeys:
   Type: AWS::IAM::AccessKey
   Properties:
     UserName: !Ref 'SAUser'

Outputs:
  UserName:
    Value: !Ref 'SAUser'
    Description: AWS User name of new user
  AccessKey:
    Value: !Ref 'SAKeys'
    Description: AWS Access Key of new user
  SecretKey:
    Value: !GetAtt [SAKeys, SecretAccessKey]
    Description: AWS Secret Access Key of new user